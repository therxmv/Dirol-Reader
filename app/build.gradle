plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
    id 'org.jetbrains.kotlin.plugin.parcelize'
}

android {
    namespace 'com.therxmv.dirolreader'
    compileSdk appConfig.compileSdkVersion

    defaultConfig {
        applicationId appConfig.applicationId
        minSdk appConfig.minSdkVersion
        targetSdk appConfig.targetSdkVersion
        versionCode 122
        versionName "1.2.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "API_HASH", "\"${properties.getProperty("API_HASH")}\""
        buildConfigField "Integer", "API_ID", "${properties.getProperty("API_ID")}"
    }

    buildTypes {
        debug {
            debuggable true
        }

        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Dirol-Reader-${variant.versionName}.apk"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(':libtd')
    implementation project(':ota-updates')
    implementation project(':constants')

    implementation appDependencies.coreKtx
    implementation appDependencies.lifecycleRuntimeKtx
    implementation appDependencies.lifecycleRuntimeCompose

    implementation appDependencies.hilt
    kapt appDependencies.hiltCompiler
    implementation appDependencies.hiltNavigation

    implementation platform(appDependencies.composeBom)
    implementation libraries.composeUi

    implementation platform(appDependencies.firebaseBom)
    implementation libraries.firebase

    implementation appDependencies.room
    kapt appDependencies.roomCompiler

    implementation appDependencies.accompanistPermission
    implementation appDependencies.accompanistUiController
    implementation appDependencies.mkkv
    implementation appDependencies.gson
    implementation libraries.exoplayer
    implementation appDependencies.collapsingToolbar
    implementation appDependencies.pagingCompose
    implementation appDependencies.composeMarkdown

    // Need for MarkdownTextTemp. Maybe can be removed
    final def markwon_version = '4.6.2'
    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:ext-strikethrough:$markwon_version"
    implementation "io.noties.markwon:ext-tables:$markwon_version"
    implementation "io.noties.markwon:html:$markwon_version"
    implementation "io.noties.markwon:linkify:$markwon_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}